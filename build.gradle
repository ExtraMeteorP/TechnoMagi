buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

ext.configFile = file "build.properties"

configFile.withReader {
    // Load config.  It shall from now be referenced as simply config or project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = "${config.version}.${System.getenv("BUILD_NUMBER")}${config.release != '' ? "-${config.release}" : ""}"
group= "com.ollieread.technomagi" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Technomagi"

minecraft {
    version = "${config.minecraft}-${config.forge}"
    runDir = "eclipse"
    
    replace "@VERSION@", project.version
}

dependencies {
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

import net.minecraftforge.gradle.delayed.*
import net.minecraftforge.gradle.tasks.dev.ChangelogTask

task createChangelog(type: ChangelogTask) {

    if (System.getenv("BUILD_NUMBER") != null) {
        def jobName = "${System.getenv("JOB_NAME")}"
        
        if (jobName?.trim()) {
            jobName = "TechnoMagi"
        }
        
        def buildNumber = "${System.getenv("BUILD_NUMBER")}"

        setServerRoot(new DelayedString(project, "${System.getenv("jenkins_server")}"))
        setJobName(new DelayedString(project, jobName.toString()))
        setAuthName(new DelayedString(project, "${System.getenv("jenkins_user")}"))
        setAuthPassword(new DelayedString(project, "${System.getenv("jenkins_pass")}"))
        setTargetBuild({ buildNumber.toString() });
        setOutput(new DelayedFile(project, 'build/libs/' + archivesBaseName + '-' + project.version + '-changelog.txt'));
    }
    
}

curse {
    dependsOn 'deobfJar'

    projectId = ${System.getenv("curse_projectid")}
    apiKey = ${System.getenv("curse_key")}
    changelog = project.hasProperty('changelog') ? project.changelog : ''
    releaseType = "${config.release != "" ? "${project.release}" : "release"}"
    addGameVersion config.minecraft

    additionalArtifact deobfJar
}

artifacts {
    archives deobfJar 
    archives jar
}

build.dependsOn "deobfJar", "createChangelog"
