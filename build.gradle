buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath 'org.ajoberstar:gradle-git:0.9.0'
    }
}

apply plugin: 'forge'
apply plugin: 'maven'

ext.configFile = file "build.properties"

configFile.withReader {
    // Load config.  It shall from now be referenced as simply config or project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}


repositories {
    maven {
        name = 'EnndsCore'
        url = "http://exia.ollieread.com/maven/"
    }
}

dependencies {
    compile "com.ollieread.ennds:EnndsCore:${config.version.ennds}:deobf"
}

version = "${config.version.minecraft}-${config.version.major}.${config.version.minor}.${config.version.revis}.${System.getenv("BUILD_NUMBER") ?: 0}${config.version.stage ? "-${config.version.stage}" : ""}"
group = "com.ollieread.technomagi" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "TechnoMagi"

minecraft {
    version = "${config.version.minecraft}-${config.version.forge}"
    runDir = "run/assets"

    replace "@VERSION@", "${config.version.major}.${config.version.minor}.${config.version.revis}.${System.getenv("BUILD_NUMBER") ?: 0}${config.version.stage ? "-${config.version.stage}" : ""}"
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        expand 'version':${config.version.minor}.${config.version.revis}.${System.getenv("BUILD_NUMBER") ?: 0}${config.version.stage ? "-${config.version.stage}" : ""}", 'mcversion':project.minecraft.version
    }
        
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

artifacts {
    archives deobfJar 
    archives jar
}

import org.ajoberstar.grgit.*

ext.repo = Grgit.open(project.file('.'))

version = "${config.version.major}.${config.version.minor}.${config.version.revis}.${System.getenv("BUILD_NUMBER") ?: 0}${config.version.stage ? "-${config.version.stage}" : ""}"

task tagBuild << {
    repo.tag.add {
        name = version
        message = "Build for ${version}"
    }
    
    repo.push(tags: true)
}

import net.minecraftforge.gradle.delayed.*
import net.minecraftforge.gradle.tasks.dev.ChangelogTask

task createChangelog(type: ChangelogTask) {

    if (System.getenv("BUILD_NUMBER") != null) {
        def jobName = "${System.getenv("JOB_NAME")}"
        
        if (jobName?.trim()) {
            jobName = "TechnoMagi"
        }
        
        def buildNumber = "${System.getenv("BUILD_NUMBER")}"

        setServerRoot(new DelayedString(project, "${System.getenv("jenkins_server")}"))
        setJobName(new DelayedString(project, jobName.toString()))
        setAuthName(new DelayedString(project, "${System.getenv("jenkins_user")}"))
        setAuthPassword(new DelayedString(project, "${System.getenv("jenkins_pass")}"))
        setTargetBuild({ buildNumber.toString() });
        setOutput(new DelayedFile(project, 'build/libs/changelog.txt'));
    }
    
}

build.dependsOn "deobfJar", "createChangelog"