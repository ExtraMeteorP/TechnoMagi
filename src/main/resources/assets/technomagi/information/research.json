{
  "research": [
    "specialisation", 
    "knowledgeProgress", 
    "playerTick",
    "damageInFire", 
    "damageOnFire", 
    "damageLava", 
    "damageInWall",
    "damageDrown", 
    "damageStarve", 
    "damageCactus", 
    "damageOutOfWorld", 
    "damageGeneric", 
    "damageMagic", 
    "damageWither", 
    "damageAnvil", 
    "damageFallingBlock", 
    "damageExplosion",
    "damageFall",
    "damageArrow",
    "attackedPig",
    "attackedSheep",
    "attackedChicken",
    "attackedCow",
    "attackedWolf",
    "attackedZombie",
    "attackedCreeper",
    "attackedSkeleton",
    "attackedEnderman",
    "attackedVillager",
    "attackedSquid",
    "attackedByWolf",
    "attackedByZombie",
    "attackedByCreeper",
    "attackedBySkeleton",
    "attackedByEnderman", 
    "killedPig",
    "killedSheep",
    "killedChicken",
    "killedCow",
    "killedWolf",
    "killedZombie",
    "killedCreeper",
    "killedSkeleton",
    "killedEnderman",
    "killedVillager",
    "killedSquid",
    "killedByWolf",
    "killedByZombie",
    "killedByCreeper",
    "killedBySkeleton",
    "killedByEnderman",
    "killedByGravity",
    "knowledgeEntityChicken",
    "knowledgeEntityCow",
    "knowledgeEntityCreeper",
    "knowledgeEntityEnderman",
    "knowledgeEntityPig",
    "knowledgeEntitySheep",
    "knowledgeEntitySkeleton",
    "knowledgeEntityZombie",
    "breedingChicken",
    "breedingCow",
    "breedingPig",
    "breedingSheep",
    "birthChicken",
    "birthCow",
    "birthPig",
    "birthSheep",
    "shearedSheep",
    "milkCow",
    "toNether", 
    "toEnd", 
    "toOverworld",
    "playerChangedDimension",
    "enderTeleport",
    "enderTeleportEnderman",
    "useFlintAndSteel",
    "useEnderpearl",
    "eatPorkchop",
    "eatBeef",
    "eatChicken",
    "eatFish",
    "eatCookedPorkchop",
    "eatCookedBeef",
    "eatCookedChicken",
    "eatCookedFish",
    "eatApple",
    "eatCarrot",
    "eatPotato",
    "eatBakedPotato",
    "eatBread",
    "eatGoldenApple",
    "eatGoldenCarrot",
    "sleep",
    "castingFinish"
  ]
}